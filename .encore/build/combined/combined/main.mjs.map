{
  "version": 3,
  "sources": ["../../../../encore.gen/internal/entrypoints/combined/main.ts", "../../../../students/analytics.ts", "../../../../students/db.ts", "../../../../students/get.ts", "../../../../students/list.ts", "../../../../students/seed.ts", "../../../../students/encore.service.ts"],
  "sourcesContent": ["import { registerGateways, registerHandlers, run, type Handler } from \"encore.dev/internal/codegen/appinit\";\n\nimport { getAnalytics as students_getAnalyticsImpl0 } from \"../../../../students\\\\analytics\";\nimport { getStudent as students_getStudentImpl1 } from \"../../../../students\\\\get\";\nimport { listStudents as students_listStudentsImpl2 } from \"../../../../students\\\\list\";\nimport { seedSeventhSemData as students_seedSeventhSemDataImpl3 } from \"../../../../students\\\\seed\";\nimport { seedFifthSemData as students_seedFifthSemDataImpl4 } from \"../../../../students\\\\seed\";\nimport * as students_service from \"../../../../students\\\\encore.service\";\nimport * as frontend_service from \"../../../../frontend\\\\encore.service\";\n\nconst gateways: any[] = [\n];\n\nconst handlers: Handler[] = [\n    {\n        apiRoute: {\n            service:           \"students\",\n            name:              \"getAnalytics\",\n            handler:           students_getAnalyticsImpl0,\n            raw:               false,\n            streamingRequest:  false,\n            streamingResponse: false,\n        },\n        endpointOptions: {\"expose\":true,\"auth\":false,\"isRaw\":false,\"isStream\":false,\"tags\":[]},\n        middlewares: students_service.default.cfg.middlewares || [],\n    },\n    {\n        apiRoute: {\n            service:           \"students\",\n            name:              \"getStudent\",\n            handler:           students_getStudentImpl1,\n            raw:               false,\n            streamingRequest:  false,\n            streamingResponse: false,\n        },\n        endpointOptions: {\"expose\":true,\"auth\":false,\"isRaw\":false,\"isStream\":false,\"tags\":[]},\n        middlewares: students_service.default.cfg.middlewares || [],\n    },\n    {\n        apiRoute: {\n            service:           \"students\",\n            name:              \"listStudents\",\n            handler:           students_listStudentsImpl2,\n            raw:               false,\n            streamingRequest:  false,\n            streamingResponse: false,\n        },\n        endpointOptions: {\"expose\":true,\"auth\":false,\"isRaw\":false,\"isStream\":false,\"tags\":[]},\n        middlewares: students_service.default.cfg.middlewares || [],\n    },\n    {\n        apiRoute: {\n            service:           \"students\",\n            name:              \"seedSeventhSemData\",\n            handler:           students_seedSeventhSemDataImpl3,\n            raw:               false,\n            streamingRequest:  false,\n            streamingResponse: false,\n        },\n        endpointOptions: {\"expose\":true,\"auth\":false,\"isRaw\":false,\"isStream\":false,\"tags\":[]},\n        middlewares: students_service.default.cfg.middlewares || [],\n    },\n    {\n        apiRoute: {\n            service:           \"students\",\n            name:              \"seedFifthSemData\",\n            handler:           students_seedFifthSemDataImpl4,\n            raw:               false,\n            streamingRequest:  false,\n            streamingResponse: false,\n        },\n        endpointOptions: {\"expose\":true,\"auth\":false,\"isRaw\":false,\"isStream\":false,\"tags\":[]},\n        middlewares: students_service.default.cfg.middlewares || [],\n    },\n];\n\nregisterGateways(gateways);\nregisterHandlers(handlers);\n\nawait run(import.meta.url);\n", "import { api, Query } from \"encore.dev/api\";\nimport { studentDB } from \"./db\";\n\ninterface AnalyticsParams {\n  batch?: Query<string>;\n}\n\ninterface PerformanceDistribution {\n  range: string;\n  count: number;\n  percentage: number;\n}\n\ninterface BatchComparison {\n  batch: string;\n  total_students: number;\n  placement_eligible: number;\n  average_aggregate: number;\n  top_performers: number;\n}\n\ninterface AnalyticsResponse {\n  total_students: number;\n  placement_eligible_count: number;\n  placement_eligible_percentage: number;\n  average_aggregate: number;\n  performance_distribution: PerformanceDistribution[];\n  batch_comparison: BatchComparison[];\n  top_performers: Array<{\n    name: string;\n    usn: string;\n    aggregate_percentage: number;\n    batch: string;\n  }>;\n}\n\n// Provides comprehensive analytics about student performance and placement eligibility.\nexport const getAnalytics = api<AnalyticsParams, AnalyticsResponse>(\n  { expose: true, method: \"GET\", path: \"/students/analytics\" },\n  async (params) => {\n    let whereClause = \"WHERE 1=1\";\n    const queryParams: any[] = [];\n    let paramIndex = 1;\n\n    if (params.batch) {\n      whereClause += ` AND batch = $${paramIndex}`;\n      queryParams.push(params.batch);\n      paramIndex++;\n    }\n\n    // Basic stats\n    const basicStatsQuery = `\n      SELECT \n        COUNT(*) as total_students,\n        COUNT(*) FILTER (WHERE placement_eligible = true) as placement_eligible_count,\n        AVG(aggregate_percentage) as average_aggregate\n      FROM students ${whereClause}\n    `;\n    const basicStats = await studentDB.rawQueryRow<{\n      total_students: number;\n      placement_eligible_count: number;\n      average_aggregate: number;\n    }>(basicStatsQuery, ...queryParams);\n\n    const totalStudents = basicStats?.total_students || 0;\n    const placementEligibleCount = basicStats?.placement_eligible_count || 0;\n    const averageAggregate = basicStats?.average_aggregate || 0;\n    const placementEligiblePercentage = totalStudents > 0 ? (placementEligibleCount / totalStudents) * 100 : 0;\n\n    // Performance distribution\n    const distributionQuery = `\n      SELECT \n        CASE \n          WHEN aggregate_percentage >= 90 THEN '90-100%'\n          WHEN aggregate_percentage >= 80 THEN '80-89%'\n          WHEN aggregate_percentage >= 70 THEN '70-79%'\n          WHEN aggregate_percentage >= 60 THEN '60-69%'\n          ELSE 'Below 60%'\n        END as range,\n        COUNT(*) as count\n      FROM students ${whereClause}\n      GROUP BY range\n      ORDER BY MIN(aggregate_percentage) DESC\n    `;\n    const distributionResults = await studentDB.rawQueryAll<{ range: string; count: number }>(\n      distributionQuery, \n      ...queryParams\n    );\n\n    const performanceDistribution = distributionResults.map(item => ({\n      range: item.range,\n      count: item.count,\n      percentage: totalStudents > 0 ? (item.count / totalStudents) * 100 : 0\n    }));\n\n    // Batch comparison (always show all batches)\n    const batchComparisonQuery = `\n      SELECT \n        batch,\n        COUNT(*) as total_students,\n        COUNT(*) FILTER (WHERE placement_eligible = true) as placement_eligible,\n        AVG(aggregate_percentage) as average_aggregate,\n        COUNT(*) FILTER (WHERE aggregate_percentage >= 85) as top_performers\n      FROM students\n      GROUP BY batch\n      ORDER BY batch\n    `;\n    const batchComparison = await studentDB.rawQueryAll<BatchComparison>(batchComparisonQuery);\n\n    // Top performers\n    const topPerformersQuery = `\n      SELECT name, usn, aggregate_percentage, batch\n      FROM students ${whereClause}\n      ORDER BY aggregate_percentage DESC\n      LIMIT 10\n    `;\n    const topPerformers = await studentDB.rawQueryAll<{\n      name: string;\n      usn: string;\n      aggregate_percentage: number;\n      batch: string;\n    }>(topPerformersQuery, ...queryParams);\n\n    return {\n      total_students: totalStudents,\n      placement_eligible_count: placementEligibleCount,\n      placement_eligible_percentage: placementEligiblePercentage,\n      average_aggregate: averageAggregate,\n      performance_distribution: performanceDistribution,\n      batch_comparison: batchComparison,\n      top_performers: topPerformers\n    };\n  }\n);\n", "import { SQLDatabase } from \"encore.dev/storage/sqldb\";\n\nexport const studentDB = new SQLDatabase(\"students\", {\n  migrations: \"./migrations\",\n});\n", "import { api, APIError } from \"encore.dev/api\";\nimport { studentDB } from \"./db\";\nimport type { Student } from \"./list\";\n\ninterface GetStudentParams {\n  usn: string;\n}\n\n// Retrieves a specific student by USN.\nexport const getStudent = api<GetStudentParams, Student>(\n  { expose: true, method: \"GET\", path: \"/students/:usn\" },\n  async (params) => {\n    const student = await studentDB.queryRow<Student>`\n      SELECT * FROM students WHERE usn = ${params.usn}\n    `;\n\n    if (!student) {\n      throw APIError.notFound(\"Student not found\");\n    }\n\n    return student;\n  }\n);\n", "import { api, Query } from \"encore.dev/api\";\nimport { studentDB } from \"./db\";\n\nexport interface Student {\n  id: number;\n  name: string;\n  usn: string;\n  batch: string;\n  tenth_percentage: number;\n  puc_percentage: number;\n  sem1_percentage?: number;\n  sem2_percentage?: number;\n  sem3_percentage?: number;\n  sem4_percentage?: number;\n  sem5_percentage?: number;\n  sem6_percentage?: number;\n  aggregate_percentage?: number;\n  active_backlogs: number;\n  placement_eligible: boolean;\n  placement_status: string;\n  created_at: Date;\n  updated_at: Date;\n}\n\ninterface ListStudentsParams {\n  batch?: Query<string>;\n  placement_eligible?: Query<boolean>;\n  search?: Query<string>;\n  limit?: Query<number>;\n  offset?: Query<number>;\n  sort_by?: Query<string>;\n  sort_order?: Query<string>;\n}\n\ninterface ListStudentsResponse {\n  students: Student[];\n  total: number;\n}\n\n// Retrieves all students with optional filtering and pagination.\nexport const listStudents = api<ListStudentsParams, ListStudentsResponse>(\n  { expose: true, method: \"GET\", path: \"/students\" },\n  async (params) => {\n    const limit = params.limit || 1000; // Increased default limit to show all students\n    const offset = params.offset || 0;\n    const sortBy = params.sort_by || 'usn';\n    const sortOrder = params.sort_order || 'asc';\n    \n    let whereClause = \"WHERE 1=1\";\n    const queryParams: any[] = [];\n    let paramIndex = 1;\n\n    if (params.batch) {\n      whereClause += ` AND batch = $${paramIndex}`;\n      queryParams.push(params.batch);\n      paramIndex++;\n    }\n\n    if (params.placement_eligible !== undefined) {\n      whereClause += ` AND placement_eligible = $${paramIndex}`;\n      queryParams.push(params.placement_eligible);\n      paramIndex++;\n    }\n\n    if (params.search) {\n      whereClause += ` AND (name ILIKE $${paramIndex} OR usn ILIKE $${paramIndex})`;\n      queryParams.push(`%${params.search}%`);\n      paramIndex++;\n    }\n\n    // Validate sort parameters\n    const validSortColumns = ['usn', 'aggregate_percentage', 'name', 'created_at'];\n    const validSortOrders = ['asc', 'desc'];\n    \n    const sortColumn = validSortColumns.includes(sortBy) ? sortBy : 'usn';\n    const sortDirection = validSortOrders.includes(sortOrder) ? sortOrder : 'asc';\n\n    let orderByClause = `ORDER BY ${sortColumn} ${sortDirection.toUpperCase()}`;\n    \n    // Add secondary sort for consistent ordering\n    if (sortColumn !== 'usn') {\n      orderByClause += ', usn ASC';\n    }\n\n    // Get total count\n    const countQuery = `SELECT COUNT(*) as count FROM students ${whereClause}`;\n    const countResult = await studentDB.rawQueryRow<{ count: number }>(countQuery, ...queryParams);\n    const total = countResult?.count || 0;\n\n    // Get students with pagination\n    const studentsQuery = `\n      SELECT * FROM students \n      ${whereClause}\n      ${orderByClause}\n      LIMIT $${paramIndex} OFFSET $${paramIndex + 1}\n    `;\n    queryParams.push(limit, offset);\n\n    const students = await studentDB.rawQueryAll<Student>(studentsQuery, ...queryParams);\n\n    return { students, total };\n  }\n);\n", "import { api } from \"encore.dev/api\";\nimport { studentDB } from \"./db\";\n\n// Seed data for 7th semester students\nexport const seedSeventhSemData = api<void, { message: string }>(\n  { expose: true, method: \"POST\", path: \"/students/seed/7th-sem\" },\n  async () => {\n    const students = [\n      { name: \"Aditya S\", usn: \"4PM22CG001\", tenth: 81.78, puc: 78, sem1: 68.62, sem2: 73.25, sem3: 84.89, sem4: 80.12, sem5: 80.34, sem6: 87.23, aggregate: 79.075, backlogs: 0 },\n      { name: \"Aiman Baig\", usn: \"4PM22CG002\", tenth: 83, puc: 81, sem1: 71, sem2: 65, sem3: 77, sem4: 73, sem5: 81, sem6: 80, aggregate: 74, backlogs: 0 },\n      { name: \"Akshay v\", usn: \"4PM22CG003\", tenth: 74.64, puc: 84.68, sem1: 68.95, sem2: 73.65, sem3: 83.28, sem4: 74.52, sem5: 72.31, sem6: 78.89, aggregate: 75.8, backlogs: 0 },\n      { name: \"Ananya k\", usn: \"4PM22CG004\", tenth: 96, puc: 85, sem1: 88.5, sem2: 92.5, sem3: 90, sem4: 84.7, sem5: 88.2, sem6: 77.6, aggregate: 87.6, backlogs: 0 },\n      { name: \"Arpitha R\", usn: \"4PM22CG005\", tenth: 81, puc: 71, sem1: 80, sem2: 83, sem3: 93, sem4: 86, sem5: 86, sem6: 86, aggregate: 86, backlogs: 0 },\n      { name: \"Arpitha.S\", usn: \"4PM22CG006\", tenth: 88.48, puc: 76.33, sem1: 66.65, sem2: 76.12, sem3: 80.66, sem4: 82.2, sem5: 85.44, sem6: 86.44, aggregate: 79.58, backlogs: 0 },\n      { name: \"Bhoomika.R\", usn: \"4PM22CG007\", tenth: 75.36, puc: 69.83, sem1: 68.75, sem2: 76.25, sem3: 87.77, sem4: 83.44, sem5: 81.44, sem6: 83.77, aggregate: 80.55, backlogs: 0 },\n      { name: \"Bi Bi Mariyam\", usn: \"4PM22CG009\", tenth: 93, puc: 94, sem1: 76, sem2: 79, sem3: 90, sem4: 83, sem5: 84, sem6: 86, aggregate: 83, backlogs: 0 },\n      { name: \"Chandana cs\", usn: \"4PM22CG010\", tenth: 72, puc: 82, sem1: 54, sem2: 67, sem3: 82, sem4: 75, sem5: 77, sem6: 82, aggregate: 73, backlogs: 0 },\n      { name: \"Charan kashayp M\", usn: \"4PM22CG011\", tenth: 84.64, puc: 69.90, sem1: 60, sem2: 57.60, sem3: 61.20, sem4: 72.20, sem5: 68.20, sem6: 74.50, aggregate: 72.30, backlogs: 2 },\n      { name: \"Darshan S\", usn: \"4pm22cg012\", tenth: 84, puc: 82, sem1: 69, sem2: 71.5, sem3: 81, sem4: 79.58, sem5: 80, sem6: 84, aggregate: 77.5, backlogs: 0 },\n      { name: \"Deekshitha DN\", usn: \"4PM22CG013\", tenth: 86.4, puc: 79.4, sem1: 73.5, sem2: 78, sem3: 78.6, sem4: 76.3, sem5: 82.3, sem6: 84.4, aggregate: 78.85, backlogs: 0 },\n      { name: \"Deekshitha R\", usn: \"4PM22CG014\", tenth: 75.84, puc: 68.66, sem1: 57.71, sem2: 67.50, sem3: 74.88, sem4: 66.77, sem5: 74.11, sem6: 76.44, aggregate: 70, backlogs: 0 },\n      { name: \"Gopika E L\", usn: \"4PM22CG015\", tenth: 79.6, puc: 80, sem1: 65.25, sem2: 70.37, sem3: 86.33, sem4: 83.33, sem5: 83.77, sem6: 86.55, aggregate: 79.71, backlogs: 0 },\n      { name: \"Hafsa Noorain Amjed\", usn: \"4PM22CG016\", tenth: 70, puc: 80, sem1: 72.87, sem2: 79.87, sem3: 88.88, sem4: 79, sem5: 83.11, sem6: 85.22, aggregate: 84, backlogs: 0 },\n      { name: \"Hasan Raza\", usn: \"4PM22CG017\", tenth: 80, puc: 58, sem1: 46.55, sem2: 60.61, sem3: 54.15, sem4: 68.5, sem5: 74.86, sem6: 71.91, aggregate: 62.58, backlogs: 0 },\n      { name: \"Hithaishi U\", usn: \"4PM22CG018\", tenth: 89.5, puc: 87, sem1: 68, sem2: 71, sem3: 86, sem4: 78, sem5: 76, sem6: 70, aggregate: 75, backlogs: 0 },\n      { name: \"Karthik.k.r\", usn: \"4PM22CG020\", tenth: 77, puc: 60.5, sem1: 58, sem2: 67, sem3: 81, sem4: 77, sem5: 79, sem6: 77, aggregate: 79, backlogs: 0 },\n      { name: \"Kartik Gopal Madivala\", usn: \"4PM22CG021\", tenth: 84.14, puc: 82, sem1: 73.37, sem2: 79.75, sem3: 87.77, sem4: 82.6, sem5: 83.22, sem6: 85.88, aggregate: 82.07, backlogs: 0 },\n      { name: \"Kruthika B I\", usn: \"4PM22CG022\", tenth: 93, puc: 91, sem1: 78, sem2: 87, sem3: 84, sem4: 85, sem5: 88, sem6: 91, aggregate: 85.30, backlogs: 0 },\n      { name: \"Manju Madhav V A\", usn: \"4PM22CG023\", tenth: 91.36, puc: 57.5, sem1: 72.25, sem2: 77.25, sem3: 83.5, sem4: 84.3, sem5: 82.77, sem6: 88.6, aggregate: 81.34, backlogs: 0 },\n      { name: \"Meghana KM\", usn: \"4PM22CG024\", tenth: 78, puc: 67, sem1: 61.49, sem2: 63.20, sem3: 67.70, sem4: 70.00, sem5: 69.30, sem6: 69.50, aggregate: 71.56, backlogs: 0 },\n      { name: \"Nandhitha G P\", usn: \"4PM22CG025\", tenth: 86.8, puc: 83.45, sem1: 80, sem2: 84.5, sem3: 86.72, sem4: 85, sem5: 84, sem6: 92.45, aggregate: 87, backlogs: 0 },\n      { name: \"Nishant\", usn: \"4PM22CG027\", tenth: 83.6, puc: 85, sem1: 67, sem2: 66, sem3: 75, sem4: 74, sem5: 77, sem6: 75, aggregate: 73, backlogs: 0 },\n      { name: \"NISHANTH K R\", usn: \"4PM22CG028\", tenth: 79, puc: 76, sem1: 61.50, sem2: 73, sem3: 77.60, sem4: 75.30, sem5: 83.60, sem6: 78.90, aggregate: 75.10, backlogs: 0 },\n      { name: \"Nithin A B\", usn: \"4PM22CG029\", tenth: 95, puc: 92, sem1: 80.37, sem2: 77.37, sem3: 88.11, sem4: 81.67, sem5: 85.11, sem6: 88.24, aggregate: 86.557, backlogs: 0 },\n      { name: \"Nivedita Shankar Gouda\", usn: \"4PM22CG030\", tenth: 82.72, puc: 67.17, sem1: 57, sem2: 71, sem3: 70.1, sem4: 71, sem5: 76.5, sem6: 72.4, aggregate: 69.58, backlogs: 0 },\n      { name: \"Padmini V\", usn: \"4PM22CG031\", tenth: 74.9, puc: 59.8, sem1: 55, sem2: 60, sem3: 63, sem4: 70, sem5: 76, sem6: 81, aggregate: 78, backlogs: 0 },\n      { name: \"Poornashree SV\", usn: \"4PM22CG032\", tenth: 93, puc: 75.39, sem1: 69.25, sem2: 74.12, sem3: 84.23, sem4: 83.12, sem5: 89.34, sem6: 87.12, aggregate: 83.20, backlogs: 0 },\n      { name: \"PRATHAMESHA C SHETTY\", usn: \"4PM22CG033\", tenth: 87, puc: 81, sem1: 79, sem2: 77.50, sem3: 74.80, sem4: 76, sem5: 75, sem6: 76, aggregate: 76, backlogs: 0 },\n      { name: \"Prerana Ashok Raikar\", usn: \"4PM22CG034\", tenth: 79.04, puc: 68.33, sem1: 71.50, sem2: 74.00, sem3: 76.30, sem4: 74.00, sem5: 77.09, sem6: 81.90, aggregate: 79.04, backlogs: 0 },\n      { name: \"Priya y m\", usn: \"4PM22CG035\", tenth: 88.80, puc: 81, sem1: 79.50, sem2: 85.50, sem3: 81, sem4: 75.70, sem5: 79, sem6: 78.40, aggregate: 75.90, backlogs: 0 },\n      { name: \"Rohan K Rajoli\", usn: \"4PM22CG036\", tenth: 63, puc: 55.50, sem1: 62.50, sem2: 67.50, sem3: 65.20, sem4: 70, sem5: 75, sem6: 67.20, aggregate: 67.90, backlogs: 0 },\n      { name: \"Sachin k\", usn: \"4PM22CG037\", tenth: 67, puc: 56, sem1: 60, sem2: 60, sem3: 60, sem4: 60, sem5: 60, sem6: 60, aggregate: 60, backlogs: 13 },\n      { name: \"Sakshi S Y\", usn: \"4PM22CG038\", tenth: 85.00, puc: 76, sem1: 56.00, sem2: 70.00, sem3: 74, sem4: 68.50, sem5: 79, sem6: 75.10, aggregate: 77, backlogs: 1 },\n      { name: \"Sanjana NA\", usn: \"4PM22CG039\", tenth: 69.12, puc: 63, sem1: 52.25, sem2: 61.25, sem3: 70.1, sem4: 70.2, sem5: 70.22, sem6: 73.22, aggregate: 66.19, backlogs: 5 },\n      { name: \"Shadabur Rahaman\", usn: \"4PM22CG040\", tenth: 91.2, puc: 84, sem1: 77.13, sem2: 77.88, sem3: 87.77, sem4: 83.11, sem5: 83.66, sem6: 90.88, aggregate: 83.63, backlogs: 0 },\n      { name: \"Shamanth s Kumbar\", usn: \"4PM22CG041\", tenth: 60, puc: 55, sem1: 52.9, sem2: 71.6, sem3: 68.4, sem4: 67.4, sem5: 79, sem6: 67, aggregate: 67.9, backlogs: 1 },\n      { name: \"Shankar\", usn: \"4PM22CG042\", tenth: 86.2, puc: 73, sem1: 79.38, sem2: 86.13, sem3: 91.33, sem4: 87.33, sem5: 86.22, sem6: 89.89, aggregate: 86.87, backlogs: 0 },\n      { name: \"Shashank vs\", usn: \"4PM22CG043\", tenth: 65, puc: 65, sem1: 60, sem2: 65, sem3: 67, sem4: 61, sem5: 74, sem6: 71, aggregate: 70, backlogs: 0 },\n      { name: \"Shivshankar Awate\", usn: \"4PM22CG044\", tenth: 83.52, puc: 84.66, sem1: 63.50, sem2: 67.80, sem3: 70.10, sem4: 67.90, sem5: 69.70, sem6: 72.50, aggregate: 68.60, backlogs: 0 },\n      { name: \"Shreya Janardhan Madival\", usn: \"4PM22CG045\", tenth: 89.28, puc: 63.33, sem1: 76, sem2: 79.88, sem3: 87.22, sem4: 84.60, sem5: 85.70, sem6: 88.40, aggregate: 83.60, backlogs: 0 },\n      { name: \"Sinchana NS\", usn: \"4pm22cg046\", tenth: 89.44, puc: 91.83, sem1: 84, sem2: 82, sem3: 84.8, sem4: 84.7, sem5: 86.8, sem6: 83.3, aggregate: 84.26, backlogs: 0 },\n      { name: \"Sourabh Patil\", usn: \"4PM22CG047\", tenth: 69, puc: 85, sem1: 86.5, sem2: 88.8, sem3: 84, sem4: 78, sem5: 85.1, sem6: 85, aggregate: 84.56, backlogs: 0 },\n      { name: \"Srushti GP\", usn: \"4PM22CG048\", tenth: 70, puc: 73, sem1: 79, sem2: 79, sem3: 79, sem4: 81, sem5: 81, sem6: 82, aggregate: 81, backlogs: 0 },\n      { name: \"Srushti N Y\", usn: \"4PM22CG049\", tenth: 86, puc: 59.60, sem1: 61.50, sem2: 68.90, sem3: 83.40, sem4: 77.80, sem5: 84.10, sem6: 86, aggregate: 78, backlogs: 0 },\n      { name: \"Subhash chandra kowshik hs\", usn: \"4PM22CG050\", tenth: 72, puc: 56, sem1: 58, sem2: 59.875, sem3: 72.33, sem4: 65.857, sem5: 74.125, sem6: 70.285, aggregate: 66.745, backlogs: 3 },\n      { name: \"Supritha GC\", usn: \"4PM22CG051\", tenth: 91.68, puc: 85, sem1: 67, sem2: 72, sem3: 85, sem4: 82, sem5: 79, sem6: 80, aggregate: 79, backlogs: 0 },\n      { name: \"Suraj.v\", usn: \"4PM22CG052\", tenth: 90.24, puc: 90.16, sem1: 76.5, sem2: 81.12, sem3: 88.44, sem4: 84.56, sem5: 82.34, sem6: 87.23, aggregate: 83.36, backlogs: 0 },\n      { name: \"Sushma KV\", usn: \"4PM22CG053\", tenth: 96.32, puc: 83.83, sem1: 73.6, sem2: 80.2, sem3: 82.6, sem4: 83.2, sem5: 79.1, sem6: 75, aggregate: 78.8, backlogs: 0 },\n      { name: \"Sushmitha M J\", usn: \"4PM22CG054\", tenth: 65, puc: 67, sem1: 65, sem2: 76, sem3: 73, sem4: 82, sem5: 82, sem6: 83, aggregate: 76.9, backlogs: 0 },\n      { name: \"Thanuja C N\", usn: \"4PM22CG055\", tenth: 89, puc: 74, sem1: 61, sem2: 67, sem3: 71, sem4: 73, sem5: 74, sem6: 81.22, aggregate: 72, backlogs: 1 },\n      { name: \"Thoofik Usmaan A\", usn: \"4PM22CG056\", tenth: 64, puc: 62, sem1: 61, sem2: 68, sem3: 82, sem4: 80, sem5: 78, sem6: 82, aggregate: 75, backlogs: 0 },\n      { name: \"U GOUTHAM KRISHNA\", usn: \"4PM22CG057\", tenth: 70, puc: 72, sem1: 74, sem2: 78, sem3: 74, sem4: 74, sem5: 74, sem6: 65, aggregate: 70, backlogs: 0 },\n      { name: \"Uday P\", usn: \"4PM22CG058\", tenth: 83, puc: 68, sem1: 60, sem2: 61, sem3: 60, sem4: 61, sem5: 62, sem6: 60, aggregate: 65, backlogs: 0 },\n      { name: \"Vaishnavi G K\", usn: \"4PM22CG059\", tenth: 95.6, puc: 78, sem1: 68, sem2: 73, sem3: 78, sem4: 78, sem5: 77, sem6: 81, aggregate: 76, backlogs: 0 },\n      { name: \"Vanishree M\", usn: \"4PM22CG060\", tenth: 73.33, puc: 83.33, sem1: 75.25, sem2: 79.62, sem3: 86.33, sem4: 82.66, sem5: 85.55, sem6: 86, aggregate: 82.76, backlogs: 0 },\n      { name: \"Varsha S\", usn: \"4PM22CG061\", tenth: 75.40, puc: 58, sem1: 62.25, sem2: 73.12, sem3: 81, sem4: 76.50, sem5: 78.30, sem6: 79.40, aggregate: 72.01, backlogs: 0 }\n    ];\n\n    for (const student of students) {\n      const placementEligible = student.aggregate >= 70 && student.backlogs === 0;\n      \n      // Determine placement status\n      let placementStatus = 'Not Placed';\n      if (['Shankar', 'Vaishnavi G K', 'Kartik Gopal Madivala'].includes(student.name)) {\n        placementStatus = 'Placed';\n      }\n      \n      await studentDB.exec`\n        INSERT INTO students (\n          name, usn, batch, tenth_percentage, puc_percentage,\n          sem1_percentage, sem2_percentage, sem3_percentage, sem4_percentage,\n          sem5_percentage, sem6_percentage, aggregate_percentage,\n          active_backlogs, placement_eligible, placement_status\n        ) VALUES (\n          ${student.name}, ${student.usn}, '7th-sem', ${student.tenth}, ${student.puc},\n          ${student.sem1}, ${student.sem2}, ${student.sem3}, ${student.sem4},\n          ${student.sem5}, ${student.sem6}, ${student.aggregate},\n          ${student.backlogs}, ${placementEligible}, ${placementStatus}\n        )\n        ON CONFLICT (usn) DO UPDATE SET\n          name = EXCLUDED.name,\n          tenth_percentage = EXCLUDED.tenth_percentage,\n          puc_percentage = EXCLUDED.puc_percentage,\n          sem1_percentage = EXCLUDED.sem1_percentage,\n          sem2_percentage = EXCLUDED.sem2_percentage,\n          sem3_percentage = EXCLUDED.sem3_percentage,\n          sem4_percentage = EXCLUDED.sem4_percentage,\n          sem5_percentage = EXCLUDED.sem5_percentage,\n          sem6_percentage = EXCLUDED.sem6_percentage,\n          aggregate_percentage = EXCLUDED.aggregate_percentage,\n          active_backlogs = EXCLUDED.active_backlogs,\n          placement_eligible = EXCLUDED.placement_eligible,\n          placement_status = EXCLUDED.placement_status,\n          updated_at = CURRENT_TIMESTAMP\n      `;\n    }\n\n    return { message: `Successfully seeded ${students.length} 7th semester students` };\n  }\n);\n\n// Seed data for 5th semester students\nexport const seedFifthSemData = api<void, { message: string }>(\n  { expose: true, method: \"POST\", path: \"/students/seed/5th-sem\" },\n  async () => {\n    const students = [\n      { name: \"Koushik b k\", usn: \"4PM23CG020\", tenth: 75, puc: 82, sem1: 67, sem2: 71.6, sem3: 76.3, sem4: 69.1, backlogs: 0 },\n      { name: \"Kishan-B\", usn: \"4PM23CG019\", tenth: 63, puc: 65, sem1: 65, sem2: 66, sem3: 67, sem4: 64, backlogs: 0 },\n      { name: \"Sakshi M C\", usn: \"4PM23CG041\", tenth: 73.2, puc: 87, sem1: 72.5, sem2: 77, sem3: 71.4, sem4: 72.6, backlogs: 0 },\n      { name: \"Kevin Tennison\", usn: \"4PM23CG018\", tenth: 66, puc: 84.5, sem1: 79, sem2: 80.7, sem3: 85.7, sem4: 74.7, backlogs: 0 },\n      { name: \"H Rajath\", usn: \"4PM23CG015\", tenth: 88, puc: 91, sem1: 82, sem2: 85, sem3: 85, sem4: 77, backlogs: 0 },\n      { name: \"KRUTHI M\", usn: \"4PM23CG021\", tenth: 86, puc: 81, sem1: 78, sem2: 79.3, sem3: 80, sem4: 82.6, backlogs: 0 },\n      { name: \"Amith N\", usn: \"4PM23CG003\", tenth: 75, puc: 74, sem1: 65, sem2: 64, sem3: 75, sem4: 70, backlogs: 0 },\n      { name: \"Sinchana G P\", usn: \"4PM23CG050\", tenth: 72, puc: 60, sem1: 66, sem2: 72.5, sem3: 72.4, sem4: 70.5, backlogs: 0 },\n      { name: \"Sandya NH\", usn: \"4PM23CG042\", tenth: 89, puc: 92, sem1: 73.1, sem2: 82.2, sem3: 76.7, sem4: 76.8, backlogs: 0 },\n      { name: \"Rakshitha A\", usn: \"4PM23CG036\", tenth: 78, puc: 65, sem1: 81.50, sem2: 85, sem3: 81.00, sem4: 75.00, backlogs: 0 },\n      { name: \"Prathibha j mirajkar\", usn: \"4PM23CG033\", tenth: 90, puc: 73, sem1: 64, sem2: 70, sem3: 76.7, sem4: 76.4, backlogs: 1 },\n      { name: \"Sahana A S\", usn: \"4PM23CG040\", tenth: 50, puc: 65.50, sem1: 54.10, sem2: 56, sem3: 67.10, sem4: 58.40, backlogs: 6 },\n      { name: \"Ankitha L\", usn: \"4PM23CG005\", tenth: 89.44, puc: 88, sem1: 78.75, sem2: 81.37, sem3: 80.88, sem4: 79.44, backlogs: 0 },\n      { name: \"Shambhavi M Y\", usn: \"4PM23CG045\", tenth: 86.08, puc: 79.67, sem1: 88.00, sem2: 91.50, sem3: 90.00, sem4: 89.50, backlogs: 0 },\n      { name: \"Vijeta Vijaykumar Naik\", usn: \"4PM23CGO57\", tenth: 97.6, puc: 90, sem1: 90, sem2: 95, sem3: 93.3, sem4: 88.4, backlogs: 0 },\n      { name: \"Rachana M\", usn: \"4pm23cg034\", tenth: 69, puc: 78.50, sem1: 65, sem2: 70, sem3: 82, sem4: 78, backlogs: 0 },\n      { name: \"Shashank Vinay Hegde\", usn: \"4PM23CG046\", tenth: 89.45, puc: 80, sem1: 76.6, sem2: 82.2, sem3: 83.8, sem4: 78.1, backlogs: 0 },\n      { name: \"Mithun P\", usn: \"4PM23CG023\", tenth: 95.68, puc: 72.33, sem1: 77, sem2: 82, sem3: 84.3, sem4: 77.4, backlogs: 0 },\n      { name: \"Soujanya Vishnu Shanbhag\", usn: \"4PM23CG052\", tenth: 91.36, puc: 85.33, sem1: 93.5, sem2: 95, sem3: 87.3, sem4: 89.5, backlogs: 0 },\n      { name: \"Yashaswini R\", usn: \"4PM23CG060\", tenth: 89.12, puc: 81.83, sem1: 79.50, sem2: 83.50, sem3: 82.40, sem4: 81.10, backlogs: 0 },\n      { name: \"T P.Rohit\", usn: \"4PM23CG055\", tenth: 61, puc: 80, sem1: 61.75, sem2: 64.12, sem3: 66.40, sem4: 58.70, backlogs: 0 },\n      { name: \"Rajath Ravikumar\", usn: \"4PM23CG035\", tenth: 85.5, puc: 85, sem1: 85.5, sem2: 86.3, sem3: 83.3, sem4: 80.1, backlogs: 1 },\n      { name: \"Karthik AP\", usn: \"4PM23CG017\", tenth: 89.50, puc: 88.94, sem1: 73.5, sem2: 75.5, sem3: 75.55, sem4: 75, backlogs: 0 },\n      { name: \"Sharanya\", usn: \"4PM24CG402\", tenth: 77.6, puc: 81.7, sem1: 0, sem2: 0, sem3: 75.2, sem4: 72.1, backlogs: 0 },\n      { name: \"Srujana J\", usn: \"4PM23CG053\", tenth: 88.8, puc: 85.5, sem1: 78.5, sem2: 82, sem3: 85, sem4: 75.3, backlogs: 0 },\n      { name: \"Sanjana R V\", usn: \"4PM23CG044\", tenth: 84, puc: 67.66, sem1: 65.25, sem2: 72, sem3: 81.66, sem4: 75.66, backlogs: 0 },\n      { name: \"Deekshitha M R\", usn: \"4pm23cg012\", tenth: 78, puc: 80, sem1: 78.50, sem2: 82, sem3: 84.30, sem4: 79.50, backlogs: 0 },\n      { name: \"Ashritha R\", usn: \"4PM23CG006\", tenth: 89, puc: 89.5, sem1: 78, sem2: 90, sem3: 84.3, sem4: 85.3, backlogs: 0 },\n      { name: \"Neeli Chandrika\", usn: \"4PM23CG027\", tenth: 100, puc: 96.4, sem1: 81, sem2: 89, sem3: 86.2, sem4: 84.2, backlogs: 0 },\n      { name: \"chandana T E\", usn: \"4PM23CG009\", tenth: 84.96, puc: 87.3, sem1: 73.5, sem2: 76.25, sem3: 83.11, sem4: 82.33, backlogs: 0 },\n      { name: \"Aditya M\", usn: \"4PM23CGOO2\", tenth: 71, puc: 68, sem1: 69.5, sem2: 66.3, sem3: 75.7, sem4: 65.1, backlogs: 1 },\n      { name: \"Suhas G Kashyap\", usn: \"4PM23CG054\", tenth: 69, puc: 84, sem1: 46.5, sem2: 62, sem3: 57.1, sem4: 63.7, backlogs: 1 },\n      { name: \"prasanna Kumar.k\", usn: \"4PM23CGO31\", tenth: 76, puc: 67, sem1: 67.5, sem2: 63.6, sem3: 69, sem4: 65.7, backlogs: 0 },\n      { name: \"Ananya A S\", usn: \"4PM23CG004\", tenth: 89, puc: 92, sem1: 55, sem2: 71, sem3: 76, sem4: 68, backlogs: 0 },\n      { name: \"Praneeth R S\", usn: \"4PM23CG030\", tenth: 87, puc: 83, sem1: 73, sem2: 78.3, sem3: 79, sem4: 78.3, backlogs: 0 },\n      { name: \"AAKANKSHA B\", usn: \"4PM23CG001\", tenth: 79, puc: 91, sem1: 63, sem2: 75, sem3: 76, sem4: 74, backlogs: 0 },\n      { name: \"Vinayprakash\", usn: \"4PM23CG058\", tenth: 79, puc: 85, sem1: 71, sem2: 81, sem3: 75, sem4: 78, backlogs: 0 },\n      { name: \"Poorvi V S\", usn: \"4PM23CG029\", tenth: 75, puc: 70, sem1: 69, sem2: 70, sem3: 71, sem4: 75, backlogs: 0 },\n      { name: \"Yashaswini G D\", usn: \"4PM23CG059\", tenth: 68.9, puc: 88.8, sem1: 64.6, sem2: 64.6, sem3: 79.4, sem4: 70.4, backlogs: 1 },\n      { name: \"Poornima R Haranagiri\", usn: \"4PM23CG028\", tenth: 90.72, puc: 84.6, sem1: 81, sem2: 84, sem3: 76, sem4: 80, backlogs: 0 },\n      { name: \"Nachiketha P K\", usn: \"4PM23CG026\", tenth: 88.8, puc: 79, sem1: 85, sem2: 85, sem3: 77.6, sem4: 73.2, backlogs: 0 },\n      { name: \"Divya R.Revankar\", usn: \"4PM23CG013\", tenth: 85, puc: 75, sem1: 74.5, sem2: 82.5, sem3: 83.8, sem4: 83.7, backlogs: 0 },\n      { name: \"Mohammed Kaif\", usn: \"4PM23CG024\", tenth: 73, puc: 85.5, sem1: 69.8, sem2: 72.25, sem3: 73.8, sem4: 71, backlogs: 0 },\n      { name: \"Lekhana B\", usn: \"4PM23CG022\", tenth: 82.72, puc: 75.16, sem1: 74.5, sem2: 86, sem3: 90, sem4: 91, backlogs: 0 },\n      { name: \"Ayisha tuba\", usn: \"4PM23CG007\", tenth: 82, puc: 89, sem1: 77.37, sem2: 79.37, sem3: 85, sem4: 75, backlogs: 0 },\n      { name: \"Sachith R\", usn: \"4PM23CG039\", tenth: 84, puc: 74, sem1: 64.12, sem2: 71.5, sem3: 76.4, sem4: 72.11, backlogs: 0 },\n      { name: \"Moulya NR\", usn: \"4PM23CG025\", tenth: 95.52, puc: 84.5, sem1: 77.5, sem2: 85.62, sem3: 85, sem4: 85.11, backlogs: 0 },\n      { name: \"Deeksha SK\", usn: \"4PM23CG011\", tenth: 84, puc: 90.8, sem1: 70.87, sem2: 78.25, sem3: 82.66, sem4: 81.66, backlogs: 0 },\n      { name: \"Bhoomika P\", usn: \"4PM23CG008\", tenth: 80, puc: 87, sem1: 63.27, sem2: 72.37, sem3: 75.55, sem4: 70.55, backlogs: 0 },\n      { name: \"Darshan survase\", usn: \"4PM23CG010\", tenth: 77.33, puc: 69.2, sem1: 70, sem2: 70, sem3: 60.5, sem4: 60, backlogs: 1 },\n      { name: \"Sindhu B S\", usn: \"4PM23CG051\", tenth: 80, puc: 83.1, sem1: 61.5, sem2: 67.75, sem3: 78.33, sem4: 70.44, backlogs: 0 },\n      { name: \"Shivani NS\", usn: \"4pm23cg047\", tenth: 84, puc: 81, sem1: 73.62, sem2: 80.80, sem3: 86, sem4: 81.80, backlogs: 0 },\n      { name: \"Prashant\", usn: \"4PM23CG032\", tenth: 71, puc: 84, sem1: 70, sem2: 81, sem3: 82, sem4: 80, backlogs: 0 },\n      { name: \"Avinash H C\", usn: \"4PM24CG400\", tenth: 80.4, puc: 83.36, sem1: 0, sem2: 0, sem3: 73.4, sem4: 63.4, backlogs: 2 },\n      { name: \"Rohit P Gokavi\", usn: \"4PM23CG038\", tenth: 80.1, puc: 86, sem1: 78, sem2: 79, sem3: 82, sem4: 85, backlogs: 0 }\n    ];\n\n    for (const student of students) {\n      // Calculate aggregate for 5th sem students (only 4 semesters available)\n      const aggregate = (student.sem1 + student.sem2 + student.sem3 + student.sem4) / 4;\n      const placementEligible = aggregate >= 70 && student.backlogs === 0;\n      \n      await studentDB.exec`\n        INSERT INTO students (\n          name, usn, batch, tenth_percentage, puc_percentage,\n          sem1_percentage, sem2_percentage, sem3_percentage, sem4_percentage,\n          aggregate_percentage, active_backlogs, placement_eligible, placement_status\n        ) VALUES (\n          ${student.name}, ${student.usn}, '5th-sem', ${student.tenth}, ${student.puc},\n          ${student.sem1}, ${student.sem2}, ${student.sem3}, ${student.sem4},\n          ${aggregate}, ${student.backlogs}, ${placementEligible}, 'Not Placed'\n        )\n        ON CONFLICT (usn) DO UPDATE SET\n          name = EXCLUDED.name,\n          tenth_percentage = EXCLUDED.tenth_percentage,\n          puc_percentage = EXCLUDED.puc_percentage,\n          sem1_percentage = EXCLUDED.sem1_percentage,\n          sem2_percentage = EXCLUDED.sem2_percentage,\n          sem3_percentage = EXCLUDED.sem3_percentage,\n          sem4_percentage = EXCLUDED.sem4_percentage,\n          aggregate_percentage = EXCLUDED.aggregate_percentage,\n          active_backlogs = EXCLUDED.active_backlogs,\n          placement_eligible = EXCLUDED.placement_eligible,\n          placement_status = EXCLUDED.placement_status,\n          updated_at = CURRENT_TIMESTAMP\n      `;\n    }\n\n    return { message: `Successfully seeded ${students.length} 5th semester students` };\n  }\n);\n", "import { Service } from \"encore.dev/service\";\n\nexport default new Service(\"students\");\n"],
  "mappings": "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",
  "names": ["api", "api", "api", "api", "api", "api"]
}
